generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Doctor {
  id                Int                @id @default(autoincrement())
  name              String
  crm               String
  speciality        String
  pacients          User[]
  icon              String?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @default(now())
  examSolicitations ExamSolicitation[]
}

model User {
  id                Int                @id @default(autoincrement())
  cpf               String             @unique
  birthDate         DateTime
  name              String
  sex               SexEnum
  icon              String?
  bloodType         BloodTypeEnum
  medicalHistory    String[]
  medicines         String[]
  allergies         String[]
  examSolicitations ExamSolicitation[]
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @default(now())
  doctor            Doctor             @relation(fields: [doctorId], references: [id])
  doctorId          Int

  @@index([cpf, name])
}

model ExamSolicitation {
  id          Int         @id @default(autoincrement())
  doctor      Doctor      @relation(fields: [doctorId], references: [id])
  doctorId    Int
  user        User        @relation(fields: [userId], references: [id])
  userId      Int
  exam        Exam        @relation(fields: [examId], references: [id])
  examId      Int
  requestDate DateTime    @default(now())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now())
  examResult  ExamResult?
}

model ExamResult {
  id                 Int              @id @default(autoincrement())
  measureDate        DateTime?
  resultDate         DateTime?
  result             String?
  document           String?
  examSolicitation   ExamSolicitation @relation(fields: [examSolicitationId], references: [id])
  examSolicitationId Int              @unique
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @default(now())
}

model Exam {
  id                Int                @id @default(autoincrement())
  name              String             @unique
  synonym           String?
  material          String?
  conservation      String?
  preparation       String?
  method            String?
  interferer        String?
  normalValues      String?
  interpretation    String?
  measureUnit       String
  examSolicitations ExamSolicitation[]

  @@index([name])
}

enum SexEnum {
  masc
  fem
  other
}

enum BloodTypeEnum {
  A_PLUS
  A_MINUS
  B_PLUS
  B_MINUS
  AB_PLUS
  AB_MINUS
  O_PLUS
  O_MINUS
}
